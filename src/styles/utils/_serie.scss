@function serie($theme-key, $serie-key, $intensity-key) {
    @if not map-has-value($theme-keys, $theme-key) {
        @error "No theme #{$theme-key}";
    }

    @if not map-has-value($serie-keys, $serie-key) {
        @error "No serie #{$serie-key}";
    }

    @if not map-has-value($intensity-keys, $intensity-key) {
        @error "No intensity #{$intensity-key}";
    }

    @return var(--sbsys-series-#{$theme-key}-#{$serie-key}-#{$intensity-key});
}

@mixin bg-color($theme-key, $serie-key, $intensity-key) {
    background-color: rgb(
        serie($theme-key, $serie-key, $intensity-key) /
            var(--sbsys-opacities-bg)
    );
}

@mixin bg-opacity($opacity-key) {
    --sbsys-opacities-bg: #{opacity($opacity-key)};
}

@mixin font-color($theme-key, $serie-key, $intensity-key) {
    color: rgb(
        serie($theme-key, $serie-key, $intensity-key) /
            var(--sbsys-opacities-font)
    );
}

@mixin font-opacity($opacity-key) {
    --sbsys-opacities-font: #{opacity($opacity-key)};
}

@mixin border-color($positions...) {
    @each $position-key, $theme-key, $serie-key, $intensity-key in $positions {
        @if not map-has-value($position-keys, $position-key) {
            @error "No position #{$position-key}";
        }

        @if $position-key == y or $position-key == top or $position-key == all {
            border-top-color: rgb(
                serie($theme-key, $serie-key, $intensity-key) /
                    var(--sbsys-opacities-border-top)
            );
        }

        @if $position-key ==
            y or
            $position-key ==
            bottom or
            $position-key ==
            all
        {
            border-bottom-color: rgb(
                serie($theme-key, $serie-key, $intensity-key) /
                    var(--sbsys-opacities-border-bottom)
            );
        }

        @if $position-key == x or $position-key == left or $position-key == all
        {
            border-left-color: rgb(
                serie($theme-key, $serie-key, $intensity-key) /
                    var(--sbsys-opacities-border-left)
            );
        }

        @if $position-key == x or $position-key == right or $position-key == all
        {
            border-right-color: rgb(
                serie($theme-key, $serie-key, $intensity-key) /
                    var(--sbsys-opacities-border-right)
            );
        }
    }
}

@mixin border-opacity($positions...) {
    @each $position-key, $opacity-key in $positions {
        @if not map-has-value($position-keys, $position-key) {
            @error "No position #{$position-key}";
        }

        @if $position-key == y or $position-key == top or $position-key == all {
            --sbsys-opacities-border-top: #{opacity($opacity-key)};
        }

        @if $position-key ==
            y or
            $position-key ==
            bottom or
            $position-key ==
            all
        {
            --sbsys-opacities-border-bottom: #{opacity($opacity-key)};
        }

        @if $position-key == x or $position-key == left or $position-key == all
        {
            --sbsys-opacities-border-left: #{opacity($opacity-key)};
        }

        @if $position-key == x or $position-key == right or $position-key == all
        {
            --sbsys-opacities-border-right: #{opacity($opacity-key)};
        }
    }
}
